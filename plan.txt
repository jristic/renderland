* Allow trailing commas in rlf arrays. 
* Hex uint literals. binary too?
* Comments support in RLF. 

* Use linear memory allocator for RenderDescription allocations. 
* Defines that are usable within the RLF and shader. 
* Allow #include of other RLF files
* Better way to size structured buffers.
	* right now you have to figure out manually how big a struct would be and enter that as the ElementSize field.
	* Perhaps I can parse the types in the shader and compute their sizes, then have something in RLF like "sizeof(shader, type)".
* Templating of blocks of RLF data
	* For instance if you wanted to draw a model multiple times, you have all the boilerplate for a draw, but you allow the position / obj-file / textures to be substituted. 
	* Kind of like a text prefab.
* Integrate RenderDoc capture?
* Investigate automatically reloading any time a file is updated.
* Dynamic flow control? 
	* Some way to only run a pass on the first frame, for instance. 
	* Some way to choose which shader to run based on some condition. 

**** Expand draw pipeline support.
	* Dynamic texture sizing
		* When tuneables are changed, recreate textures if their size changes.
		* Implement swizzle in AST subscript
		* Store references to views for a given texture/buffer for lookup when they need to be recreated. 
		* Handle exception thrown by HandleDisplaySizeChanged
		* Why aren't ast eval errors printing their location?
	* Viewport.
	* Blend state.
	* Multiple RT support. 
	* Instancing for draws.
	* Indirect draws.
	* Append and consume buffers.
	* Multiple vertex buffer support. 
	* MSAA support.

*** Cleanup:
	* Handle various errors in specifying views/resources (mainly providing the wrong kind).
	* Refactor system values.
	* Texture flag cleanup -> SRV/UAV/RTV/DSV can be determined from usage. or keep it explicit?
	* Make obj parsing handle not having normals or UVs. 

*** UI:
	* Switch to the dearimgui docking branch.
	* Event-viewer style list of the passes in a frame. 
	* Tuneables panel.
	* Debug viz tools for seeing the contents of textures/buffers/rendertargets/depthstencils at any given point in the frame. 

Samples:
	* Shadow-sampling methods comparison. 
	* Clustered lighting.
	* Compute-based culling with draw-indirect.
	* Mirror reflection. 
	* Compute fluid simulation. 
	* Compute sorted triangles for transparency rendering. 
	* Deferred rendering with gbuffers.
