
ObjImport {
	ObjPath = "../../common/monkey.obj";
} monkeyObj

Buffer {
	Flags = { Vertex };
	InitData = monkeyObj.vertices;
} verts

Buffer {
	Flags = { Index };
	InitData = monkeyObj.indices;
} indices


Sampler {
	Filter = { All = Point };
	AddressMode = { UVW=Clamp };
} PointSampler

Texture {
	Format = R8G8B8A8_UNORM;
	Size = DisplaySize();
	Flags = { RTV, SRV };
} RT

Texture {
	Format = D24_UNORM_S8_UINT;
	Size = { DisplaySize() };
	Flags = { DSV };
} DS


Draw {
	Topology = TriList;
	VShader = VertexShader {
		ShaderPath = "vertex.hlsl";
		EntryPoint = "VSMain";
	};
	PShader = PixelShader {
		ShaderPath = "pixel.hlsl";
		EntryPoint = "PSMain";
	};
	VertexBuffer = verts;
	IndexBuffer = indices;
	RenderTarget = RT;
	DepthStencil = DS;
	SetConstantVs Matrix = 
		projection(3.14/2, DisplaySize().x / float(DisplaySize().y), 0.1, 10)
		* 
		lookAt(float3(2,0,0), float3(0,0,0));
} obj_draw

Passes {
	ClearColor{ Target=RT; Color={0,0,0,1}; },
	ClearDepth{ Target=DS; Depth=1; },
	obj_draw
}

output RT