
Sampler {
	Filter = { All = Point };
	AddressMode = { U=Border, V=Mirror, W=Clamp };
	BorderColor = { 0, 0.75, 0.5, 1 };
} PointSampler

Sampler {
	Filter = { Min = Linear, Mag = Linear, Mip=Linear};
	AddressMode = { UV=Border };
	BorderColor = { 0.8, 0.2, 0, 1 };
} LinearSampler

Texture {
	Size = {128,128};
	Format = R8G8B8A8_UNORM;
	Flags = {SRV,UAV};
} Tex

Dispatch {
	Shader = ComputeShader {
		ShaderPath = "producer.hlsl";
		EntryPoint = "CSMain";
	};
	Groups = { 16, 16, 1 };
	Bind OutTexture = Tex;
} producerDispatch

Dispatch {
	Shader = ComputeShader {
		ShaderPath = "consumer.hlsl";
		EntryPoint = "CSMain";
	};
	ThreadPerPixel = true;
	Bind OutTexture = @BackBuffer;
	Bind InTexture = Tex;
	Bind PointSampler = PointSampler;
	Bind LinearSampler = LinearSampler;
	setconstant TextureSize = DisplaySize();
	setconstant Time = time();
} consumerDispatch

Passes {
	producerDispatch,
	consumerDispatch
}
