
Sampler {
	Filter = { All = Point };
	AddressMode = { UVW=Clamp };
} PointSampler

Texture {
	Size = {256,256};
	Flags = { SRV, UAV };
} Tex

ComputeShader {
	ShaderPath = "producer.hlsl";
	EntryPoint = "CSMain";
} producer

Dispatch {
	Shader = producer;
	Groups = { 32, 32, 1 };
	Bind OutTexture = Tex;
	setconstant TextureSize = DisplaySize();
	setconstant Time = time();
} producerDispatch

ComputeShader {
	ShaderPath = "consumer.hlsl";
	EntryPoint = "CSMain";
} consumer

Dispatch {
	Shader = consumer;
	ThreadPerPixel = true;
	Bind OutTexture = @BackBuffer;
	Bind InTexture=Tex;
	Bind Sampler= PointSampler;
	setconstant TextureSize = DisplaySize();
	setconstant Time = time();
} consumerDispatch

Passes {
	producerDispatch,
	consumerDispatch
}
